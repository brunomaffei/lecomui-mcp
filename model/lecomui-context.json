[
  {
    "id": "BaseAxisProps",
    "name": "BaseAxisProps",
    "description": "The props definition of base axis",
    "type": "tool",
    "properties": []
  },
  {
    "id": "Bar",
    "name": "Bar",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "AdaptChildClipboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "AdaptChildCompositionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "AdaptChildFocusEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "AdaptChildFocusEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "AdaptChildFocusEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "AdaptChildFocusEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "AdaptChildFormEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPressCapture",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUp",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "AdaptChildKeyboardEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "AdaptChildDragEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "AdaptChildMouseEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "AdaptChildReactEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "AdaptChildTouchEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnterCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeaveCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "AdaptChildPointerEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "AdaptChildUIEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "AdaptChildUIEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "AdaptChildWheelEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "AdaptChildWheelEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement> & (() => void)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement> & (() => void)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AdaptChildAnimationEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "AdaptChildTransitionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "AdaptChildTransitionEventHandler<any, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGPathElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "index",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "activeIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "layout",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xAxisId",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yAxisId",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stackId",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "barSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dataKey",
        "type": "DataKey<any>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tooltipType",
        "type": "\"none\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "legendType",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "minPointSize",
        "type": "MinPointSize",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maxBarSize",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hide",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shape",
        "type": "ActiveShape<BarProps, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "activeBar",
        "type": "ActiveShape<BarProps, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "background",
        "type": "ActiveShape<BarProps, SVGPathElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "number | [number, number, number, number]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "isAnimationActive",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationBegin",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationDuration",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationEasing",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationId",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "label",
        "type": "ImplicitLabelType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xAxis",
        "type": "Omit<Props, \"scale\"> & { scale: D3Scale<string | number>; x?: number; width?: number; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yAxis",
        "type": "Omit<Props, \"scale\"> & { scale: D3Scale<string | number>; y?: number; height?: number; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "data",
        "type": "BarRectangleItem[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "top",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "left",
        "type": "number",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "BarChart",
    "name": "BarChart",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "syncId",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "syncMethod",
        "type": "Function | \"index\" | \"value\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "compact",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dataKey",
        "type": "DataKey<any>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "data",
        "type": "any[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "layout",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stackOffset",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "throttleDelay",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "margin",
        "type": "Margin",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "barCategoryGap",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "barGap",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "barSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maxBarSize",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultShowTooltip",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "CategoricalChartFunc",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "reverseStackOrder",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startAngle",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "endAngle",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "innerRadius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "outerRadius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "desc",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessibilityLayer",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<{ readonly eventEmitterSymbol: Symbol; clipPathId: string; accessibilityManager: AccessibilityManager; throttleTriggeredAfterMouseMove: any; container?: HTMLElement; ... 63 more ...; UNSAFE_componentWillUpdate?(nextProps: Readonly<...>, nextState: Readonly<...>, nextContext: any): void; }>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CartesianGrid",
    "name": "CartesianGrid",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "number",
        "defaultValue": null,
        "description": "The x-coordinate of grid.\nIf left undefined, it will be computed from the chart's offset and margins."
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "number",
        "defaultValue": null,
        "description": "The y-coordinate of grid.\nIf left undefined, it will be computed from the chart's offset and margins."
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGRectElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGRectElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizontal",
        "type": "GridLineType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertical",
        "type": "GridLineType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizontalPoints",
        "type": "number[]",
        "defaultValue": null,
        "description": "Array of coordinates in pixels where to draw horizontal grid lines.\nHas priority over syncWithTicks and horizontalValues."
      },
      {
        "name": "verticalPoints",
        "type": "number[]",
        "defaultValue": null,
        "description": "Array of coordinates in pixels where to draw vertical grid lines.\nHas priority over syncWithTicks and horizontalValues."
      },
      {
        "name": "verticalFill",
        "type": "string[]",
        "defaultValue": null,
        "description": "Defines background color of stripes.\n\nThe values from this array will be passed in as the `fill` property in a `rect` SVG element.\nFor possible values see: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill#rect\n\nIn case there are more stripes than colors, the colors will start from beginning\nSo for example: verticalFill['yellow', 'black'] produces a pattern of yellow|black|yellow|black\n\nIf this is undefined, or an empty array, then there is no background fill."
      },
      {
        "name": "horizontalFill",
        "type": "string[]",
        "defaultValue": null,
        "description": "Defines background color of stripes.\n\nThe values from this array will be passed in as the `fill` property in a `rect` SVG element.\nFor possible values see: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill#rect\n\nIn case there are more stripes than colors, the colors will start from beginning\nSo for example: horizontalFill['yellow', 'black'] produces a pattern of yellow|black|yellow|black\n\nIf this is undefined, or an empty array, then there is no background fill."
      },
      {
        "name": "syncWithTicks",
        "type": "boolean",
        "defaultValue": null,
        "description": "If true, only the lines that correspond to the axes ticks values will be drawn.\nIf false, extra lines could be added for each axis (at min and max coordinates), if there will not such ticks.\nhorizontalPoints, verticalPoints, horizontalValues, verticalValues have priority over syncWithTicks."
      },
      {
        "name": "horizontalValues",
        "type": "number[] | string[]",
        "defaultValue": null,
        "description": "Array of values, where horizontal lines will be drawn. Numbers or strings, in dependence on axis type.\nHas priority over syncWithTicks but not over horizontalValues."
      },
      {
        "name": "verticalValues",
        "type": "number[] | string[]",
        "defaultValue": null,
        "description": "Array of values, where vertical lines will be drawn. Numbers or strings, in dependence on axis type.\nHas priority over syncWithTicks but not over verticalValues."
      },
      {
        "name": "horizontalCoordinatesGenerator",
        "type": "HorizontalCoordinatesGenerator",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "verticalCoordinatesGenerator",
        "type": "VerticalCoordinatesGenerator",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Label",
    "name": "Label",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGTextElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "ViewBox",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "parentViewBox",
        "type": "ViewBox",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formatter",
        "type": "Function",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "position",
        "type": "LabelPosition",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "ContentType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textBreakAll",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "angle",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "index",
        "type": "number",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "LabelList",
    "name": "LabelList",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGTextElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGTextElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "data",
        "type": "T[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "valueAccessor",
        "type": "Function",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clockWise",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dataKey",
        "type": "DataKey<Record<string, any>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "ContentType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textBreakAll",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "position",
        "type": "LabelPosition",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "angle",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formatter",
        "type": "Function",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "useForm",
    "name": "useForm",
    "description": "Custom hook to manage the entire form.",
    "type": "tool",
    "properties": [
      {
        "name": "mode",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "reValidateMode",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValues",
        "type": "AsyncDefaultValues<TFieldValues> | { [x: string]: any; } | ((BrowserNativeObject | NestedValue) & FieldValues) | { ...; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "FieldValues",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "errors",
        "type": "FieldErrors<TFieldValues>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resetOptions",
        "type": "Partial<{ keepDirtyValues: boolean; keepErrors: boolean; keepDirty: boolean; keepValues: boolean; keepDefaultValues: boolean; keepIsSubmitted: boolean; keepIsSubmitSuccessful: boolean; keepTouched: boolean; keepIsValidating: boolean; keepIsValid: boolean; keepSubmitCount: boolean; }>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resolver",
        "type": "Resolver<TFieldValues, TContext, TTransformedValues>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "context",
        "type": "TContext",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shouldFocusError",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shouldUnregister",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shouldUseNativeValidation",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "progressive",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "criteriaMode",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "delayError",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formControl",
        "type": "Omit<UseFormReturn<TFieldValues, TContext, TTransformedValues>, \"formState\">",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Translation",
    "name": "Translation",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "ns",
        "type": "string | $Tuple<string>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "i18n",
        "type": "i18n",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "useSuspense",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPrefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nsMode",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Accordion",
    "name": "Accordion",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | string[]",
        "defaultValue": null,
        "description": "The controlled stateful value of the accordion item whose content is expanded.\nThe controlled stateful value of the accordion items whose contents are expanded."
      },
      {
        "name": "defaultValue",
        "type": "string | string[]",
        "defaultValue": null,
        "description": "The value of the item whose content is expanded when the accordion is initially rendered. Use\n`defaultValue` if you do not need to control the state of an accordion.\nThe value of the items whose contents are expanded when the accordion is initially rendered. Use\n`defaultValue` if you do not need to control the state of an accordion."
      },
      {
        "name": "onValueChange",
        "type": "((value: string) => void) | ((value: string[]) => void)",
        "defaultValue": null,
        "description": "The callback that fires when the state of the accordion changes."
      },
      {
        "name": "collapsible",
        "type": "boolean",
        "defaultValue": "false",
        "description": "Whether an accordion item can be collapsed after it has been opened."
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": "Whether or not an accordion is disabled from user interaction.\n@defaultValue false"
      },
      {
        "name": "orientation",
        "type": "React.AriaAttributes",
        "defaultValue": "vertical",
        "description": "The layout in which the Accordion operates."
      },
      {
        "name": "dir",
        "type": "enum",
        "defaultValue": null,
        "description": "The language read direction."
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "AccordionContent",
    "name": "AccordionContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "AccordionItem",
    "name": "AccordionItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "AccordionTrigger",
    "name": "AccordionTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Button",
    "name": "Button",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "customStyles",
        "type": "CustomStyles$1",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "isActive",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "isLoading",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CadastroFacil",
    "name": "CadastroFacil",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "fillColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Card",
    "name": "Card",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CardContent",
    "name": "CardContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CardDescription",
    "name": "CardDescription",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CardFooter",
    "name": "CardFooter",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CardHeader",
    "name": "CardHeader",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "CardTitle",
    "name": "CardTitle",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Legend",
    "name": "Legend",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "content",
        "type": "ContentType",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "iconSize",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "iconType",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "layout",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "align",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "verticalAlign",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "payload",
        "type": "Payload[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inactiveColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formatter",
        "type": "Formatter",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "(data: Payload, index: number, event: MouseEvent<Element, MouseEvent>) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "(data: Payload, index: number, event: MouseEvent<Element, MouseEvent>) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "(data: Payload, index: number, event: MouseEvent<Element, MouseEvent>) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "AdaptChildClipboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "AdaptChildCompositionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "AdaptChildFocusEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "AdaptChildFocusEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "AdaptChildFocusEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "AdaptChildFocusEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "AdaptChildFormEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPressCapture",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUp",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "AdaptChildKeyboardEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "AdaptChildDragEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "AdaptChildMouseEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "AdaptChildReactEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "AdaptChildTouchEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnterCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeaveCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "AdaptChildPointerEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "AdaptChildUIEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "AdaptChildUIEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "AdaptChildWheelEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "AdaptChildWheelEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AdaptChildAnimationEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "AdaptChildTransitionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "AdaptChildTransitionEventHandler<any, ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<ReactElement<unknown, string | JSXElementConstructor<any>>>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wrapperStyle",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "chartWidth",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "chartHeight",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "margin",
        "type": "{ top?: number; left?: number; bottom?: number; right?: number; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "payloadUniqBy",
        "type": "UniqueOption<Payload>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBBoxUpdate",
        "type": "(box: DOMRect) => void",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Tooltip",
    "name": "Tooltip",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "separator",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wrapperClassName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "labelClassName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formatter",
        "type": "Formatter<TValue, TName>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyle",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemStyle",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "labelStyle",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "labelFormatter",
        "type": "(label: any, payload: Payload<TValue, TName>[]) => ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "label",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "payload",
        "type": "Payload<TValue, TName>[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemSorter",
        "type": "(item: Payload<TValue, TName>) => string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessibilityLayer",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "active",
        "type": "boolean",
        "defaultValue": null,
        "description": "If true, then Tooltip is always displayed, once an activeIndex is set by mouse over, or programmatically.\nIf false, then Tooltip is never displayed.\nIf active is undefined, Recharts will control when the Tooltip displays. This includes mouse and keyboard controls."
      },
      {
        "name": "includeHidden",
        "type": "boolean",
        "defaultValue": null,
        "description": "If true, then Tooltip will information about hidden series (defaults to false). Interacting with the hide property of Area, Bar, Line, Scatter."
      },
      {
        "name": "allowEscapeViewBox",
        "type": "AllowInDimension",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationDuration",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "animationEasing",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "ContentType<TValue, TName>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "coordinate",
        "type": "Partial<Coordinate>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "boolean | SVGProps<SVGElement> | ReactElement<unknown, string | JSXElementConstructor<any>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterNull",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "isAnimationActive",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "payloadUniqBy",
        "type": "UniqueOption<Payload<TValue, TName>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "position",
        "type": "Partial<Coordinate>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "reverseDirection",
        "type": "AllowInDimension",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shared",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "trigger",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "useTranslate3d",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "CartesianViewBox",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wrapperStyle",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Checkbox",
    "name": "Checkbox",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "indeterminate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "CheckedState",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "checked",
        "type": "CheckedState",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCheckedChange",
        "type": "(checked: CheckedState) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DataTable",
    "name": "DataTable",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "isLoading",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "columns",
        "type": "Column<TData, TValue>[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "data",
        "type": "TData[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "noResults",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pagination",
        "type": "PaginationProps",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vwDiff",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vhDiff",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "noScroll",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "skeleton",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onIsSelected",
        "type": "(row: Row<TData>) => boolean",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Dialog",
    "name": "Dialog",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "open",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "modal",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "DialogClose",
    "name": "DialogClose",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DialogContent",
    "name": "DialogContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "noClose",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the escape key is down.\nCan be prevented."
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\nCan be prevented."
      },
      {
        "name": "onFocusOutside",
        "type": "(event: FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the focus moves outside of the `DismissableLayer`.\nCan be prevented."
      },
      {
        "name": "onInteractOutside",
        "type": "(event: PointerDownOutsideEvent | FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when an interaction happens outside the `DismissableLayer`.\nSpecifically, when a `pointerdown` event happens outside or focus moves outside of it.\nCan be prevented."
      },
      {
        "name": "onOpenAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on open.\nCan be prevented."
      },
      {
        "name": "onCloseAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on close.\nCan be prevented."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DialogDescription",
    "name": "DialogDescription",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DialogOverlay",
    "name": "DialogOverlay",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DialogPortal",
    "name": "DialogPortal",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "container",
        "type": "Element | DocumentFragment",
        "defaultValue": null,
        "description": "Specify a container element to portal the content into."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      }
    ]
  },
  {
    "id": "DialogTitle",
    "name": "DialogTitle",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLHeadingElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLHeadingElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DialogTrigger",
    "name": "DialogTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenu",
    "name": "DropdownMenu",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dir",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "open",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "modal",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "DropdownMenuCheckboxItem",
    "name": "DropdownMenuCheckboxItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "checked",
        "type": "CheckedState",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCheckedChange",
        "type": "(checked: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuContent",
    "name": "DropdownMenuContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "align",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusOutside",
        "type": "(event: FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInteractOutside",
        "type": "(event: PointerDownOutsideEvent | FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCloseAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on close.\nCan be prevented."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "loop",
        "type": "boolean",
        "defaultValue": null,
        "description": "Whether keyboard navigation should loop around\n@defaultValue false"
      },
      {
        "name": "side",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sideOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrowPadding",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "avoidCollisions",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionBoundary",
        "type": "Element | Element[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionPadding",
        "type": "number | Partial<Record<\"top\" | \"left\" | \"bottom\" | \"right\", number>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sticky",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hideWhenDetached",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "updatePositionStrategy",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuGroup",
    "name": "DropdownMenuGroup",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuItem",
    "name": "DropdownMenuItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inset",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuLabel",
    "name": "DropdownMenuLabel",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inset",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuPortal",
    "name": "DropdownMenuPortal",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "container",
        "type": "Element | DocumentFragment",
        "defaultValue": null,
        "description": "Specify a container element to portal the content into."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      }
    ]
  },
  {
    "id": "DropdownMenuRadioGroup",
    "name": "DropdownMenuRadioGroup",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onValueChange",
        "type": "(value: string) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuRadioItem",
    "name": "DropdownMenuRadioItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuSeparator",
    "name": "DropdownMenuSeparator",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuSub",
    "name": "DropdownMenuSub",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "open",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean) => void",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "DropdownMenuSubContent",
    "name": "DropdownMenuSubContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusOutside",
        "type": "(event: FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInteractOutside",
        "type": "(event: PointerDownOutsideEvent | FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "loop",
        "type": "boolean",
        "defaultValue": null,
        "description": "Whether keyboard navigation should loop around\n@defaultValue false"
      },
      {
        "name": "sideOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrowPadding",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "avoidCollisions",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionBoundary",
        "type": "Element | Element[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionPadding",
        "type": "number | Partial<Record<\"top\" | \"left\" | \"bottom\" | \"right\", number>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sticky",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hideWhenDetached",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "updatePositionStrategy",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuSubTrigger",
    "name": "DropdownMenuSubTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inset",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "DropdownMenuTrigger",
    "name": "DropdownMenuTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "FormControl",
    "name": "FormControl",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "FormDescription",
    "name": "FormDescription",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "FormItem",
    "name": "FormItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "FormLabel",
    "name": "FormLabel",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLLabelElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "htmlFor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLLabelElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "FormMessage",
    "name": "FormMessage",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLParagraphElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLParagraphElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Input",
    "name": "Input",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "sufix",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "iconBefore",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "iconAfter",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "containerClassName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefixInset",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sufixInset",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "ChangeEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "HTMLInputTypeAttribute",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLInputElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "list",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "step",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "multiple",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "pattern",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accept",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alt",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "HTMLInputAutoCompleteAttribute",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capture",
        "type": "boolean | \"user\" | \"environment\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maxLength",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "minLength",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "src",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLInputElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "LogoLecom",
    "name": "LogoLecom",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "fillColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "LogoLecomBrand",
    "name": "LogoLecomBrand",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "fillColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "ModoTeste",
    "name": "ModoTeste",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "fillColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "MultiSelect",
    "name": "MultiSelect",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "options",
        "type": "{ label: string; value: string; }[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onValueChange",
        "type": "(value: string[]) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "placeholder",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maxCount",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "modalPopover",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Notification",
    "name": "Notification",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "placement",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "showProgress",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableClose",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pauseOnHover",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fullWidth",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "isCollapsed",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "action",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultCollapsed",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCollapseChange",
        "type": "any",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "PaginationContent",
    "name": "PaginationContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLUListElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLUListElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "PaginationItem",
    "name": "PaginationItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLLIElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLLIElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Popover",
    "name": "Popover",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "open",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "modal",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "PopoverContent",
    "name": "PopoverContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "align",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the escape key is down.\nCan be prevented."
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\nCan be prevented."
      },
      {
        "name": "onFocusOutside",
        "type": "(event: FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the focus moves outside of the `DismissableLayer`.\nCan be prevented."
      },
      {
        "name": "onInteractOutside",
        "type": "(event: PointerDownOutsideEvent | FocusOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when an interaction happens outside the `DismissableLayer`.\nSpecifically, when a `pointerdown` event happens outside or focus moves outside of it.\nCan be prevented."
      },
      {
        "name": "onOpenAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on open.\nCan be prevented."
      },
      {
        "name": "onCloseAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on close.\nCan be prevented."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "side",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sideOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrowPadding",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "avoidCollisions",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionBoundary",
        "type": "Element | Element[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionPadding",
        "type": "number | Partial<Record<\"top\" | \"left\" | \"bottom\" | \"right\", number>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sticky",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hideWhenDetached",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "updatePositionStrategy",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "PopoverTrigger",
    "name": "PopoverTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "RadioGroup",
    "name": "RadioGroup",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "loop",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onValueChange",
        "type": "(value: string) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "RadioGroupItem",
    "name": "RadioGroupItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Rpa",
    "name": "Rpa",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "fillColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "ScrollArea",
    "name": "ScrollArea",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scrollHideDelay",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "ScrollBar",
    "name": "ScrollBar",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Select",
    "name": "Select",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "open",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultOpen",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onOpenChange",
        "type": "(open: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoComplete",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onValueChange",
        "type": "(value: string) => void",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "SelectContent",
    "name": "SelectContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "position",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "align",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the escape key is down.\nCan be prevented."
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\nCan be prevented."
      },
      {
        "name": "onCloseAutoFocus",
        "type": "(event: Event) => void",
        "defaultValue": null,
        "description": "Event handler called when auto-focusing on close.\nCan be prevented."
      },
      {
        "name": "side",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sideOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrowPadding",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "avoidCollisions",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionBoundary",
        "type": "Element | Element[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionPadding",
        "type": "number | Partial<Record<\"top\" | \"left\" | \"bottom\" | \"right\", number>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sticky",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hideWhenDetached",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "updatePositionStrategy",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectGroup",
    "name": "SelectGroup",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectItem",
    "name": "SelectItem",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textValue",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectLabel",
    "name": "SelectLabel",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectScrollDownButton",
    "name": "SelectScrollDownButton",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectScrollUpButton",
    "name": "SelectScrollUpButton",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectSeparator",
    "name": "SelectSeparator",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectTrigger",
    "name": "SelectTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "customStyles",
        "type": "CustomStyles$1",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "SelectValue",
    "name": "SelectValue",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "placeholder",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLSpanElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLSpanElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Spin",
    "name": "Spin",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "textColor",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "size",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "Switch",
    "name": "Switch",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "checked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "required",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCheckedChange",
        "type": "(checked: boolean) => void",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "Tag",
    "name": "Tag",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      }
    ]
  },
  {
    "id": "TooltipArrow",
    "name": "TooltipArrow",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "string",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "height",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "max",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "media",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "method",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "min",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "target",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "width",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "crossOrigin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accentHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accumulate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "additive",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignmentBaseline",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "allowReorder",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "amplitude",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arabicForm",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ascent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeName",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "attributeType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoReverse",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "azimuth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseFrequency",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baselineShift",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "baseProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bbox",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "begin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "bias",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "by",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "calcMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "capHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clip",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPath",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipPathUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "clipRule",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorInterpolationFilters",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorProfile",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "colorRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentScriptType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentStyleType",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cursor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "cy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "d",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "decelerate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "descent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "diffuseConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "direction",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "display",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "divisor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dominantBaseline",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "edgeMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "elevation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enableBackground",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "end",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "exponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "externalResourcesRequired",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fill",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fillRule",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filter",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterRes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "filterUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "floodOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "focusable",
        "type": "Booleanish | \"auto\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontFamily",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSize",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontSizeAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStretch",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontStyle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontVariant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fontWeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "format",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fr",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "from",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "fy",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "g2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphName",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationHorizontal",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphOrientationVertical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "glyphRef",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientTransform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "gradientUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizAdvX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "horizOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "href",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ideographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "imageRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "in",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "intercept",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k3",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k4",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "k",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelMatrix",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kernelUnitLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "kerning",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyPoints",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keySplines",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "keyTimes",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lengthAdjust",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "letterSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lightingColor",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "limitingConeAngle",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "local",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerEnd",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerMid",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerStart",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "markerWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mask",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskContentUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "maskUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "mode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "numOctaves",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "offset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "opacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "operator",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "order",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orient",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "orientation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "origin",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overflow",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "overlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "paintOrder",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "panose1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "path",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pathLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternContentUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternTransform",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "patternUnits",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointerEvents",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "points",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "pointsAtZ",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAlpha",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "preserveAspectRatio",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "primitiveUnits",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "r",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radius",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "refY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "renderingIntent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatCount",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "repeatDur",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredExtensions",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "requiredFeatures",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "restart",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "result",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rotate",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rx",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ry",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "scale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "seed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "shapeRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slope",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularConstant",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "specularExponent",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "speed",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spreadMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "startOffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stdDeviation",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemh",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stemv",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stitchTiles",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopColor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stopOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughPosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strikethroughThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "stroke",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDasharray",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeDashoffset",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinecap",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeLinejoin",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeMiterlimit",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeOpacity",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "strokeWidth",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "surfaceScale",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "systemLanguage",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tableValues",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "targetY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textAnchor",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textDecoration",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textLength",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "textRendering",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "to",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "transform",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "u2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlinePosition",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "underlineThickness",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeBidi",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unicodeRange",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unitsPerEm",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vAlphabetic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "values",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vectorEffect",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "version",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertAdvY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginX",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vertOriginY",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vHanging",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vIdeographic",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewBox",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "viewTarget",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "visibility",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vMathematical",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "widths",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "wordSpacing",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "writingMode",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "x",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xHeight",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkActuate",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkArcrole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkHref",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkRole",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkShow",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkTitle",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xlinkType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlBase",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlLang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlns",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlnsXlink",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "xmlSpace",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y1",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y2",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "y",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "yChannelSelector",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "z",
        "type": "string | number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "zoomAndPan",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<SVGSVGElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<SVGSVGElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "TooltipContent",
    "name": "TooltipContent",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "color",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrow",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "A more descriptive label for accessibility purpose"
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLDivElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "align",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEscapeKeyDown",
        "type": "(event: KeyboardEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the escape key is down.\nCan be prevented."
      },
      {
        "name": "onPointerDownOutside",
        "type": "(event: PointerDownOutsideEvent) => void",
        "defaultValue": null,
        "description": "Event handler called when the a `pointerdown` event happens outside of the `Tooltip`.\nCan be prevented."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      },
      {
        "name": "side",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sideOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "alignOffset",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "arrowPadding",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "avoidCollisions",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionBoundary",
        "type": "Element | Element[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "collisionPadding",
        "type": "number | Partial<Record<\"top\" | \"left\" | \"bottom\" | \"right\", number>>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "sticky",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hideWhenDetached",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "updatePositionStrategy",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLDivElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "TooltipPortal",
    "name": "TooltipPortal",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "container",
        "type": "Element | DocumentFragment",
        "defaultValue": null,
        "description": "Specify a container element to portal the content into."
      },
      {
        "name": "forceMount",
        "type": "true",
        "defaultValue": null,
        "description": "Used to force mounting when more control is needed. Useful when\ncontrolling animation with React animation libraries."
      }
    ]
  },
  {
    "id": "TooltipProvider",
    "name": "TooltipProvider",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "delayDuration",
        "type": "number",
        "defaultValue": null,
        "description": "The duration from when the pointer enters the trigger until the tooltip gets opened.\n@defaultValue 700"
      },
      {
        "name": "skipDelayDuration",
        "type": "number",
        "defaultValue": null,
        "description": "How much time a user has to enter another trigger without incurring a delay again.\n@defaultValue 300"
      },
      {
        "name": "disableHoverableContent",
        "type": "boolean",
        "defaultValue": null,
        "description": "When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n@defaultValue false"
      }
    ]
  },
  {
    "id": "TooltipTrigger",
    "name": "TooltipTrigger",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "dangerouslySetInnerHTML",
        "type": "{ __html: string | TrustedHTML; }",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopy",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCopyCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCut",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCutCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPaste",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPasteCapture",
        "type": "ClipboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEnd",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionEndCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStart",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionStartCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdate",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCompositionUpdateCapture",
        "type": "CompositionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocus",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onFocusCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlur",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBlurCapture",
        "type": "FocusEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChange",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onChangeCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInput",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInputCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onReset",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onResetCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmit",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSubmitCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalid",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onInvalidCapture",
        "type": "FormEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoad",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onError",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onErrorCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDown",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyDownCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyPress",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUp` or `onKeyDown` instead"
      },
      {
        "name": "onKeyPressCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": "@deprecated Use `onKeyUpCapture` or `onKeyDownCapture` instead"
      },
      {
        "name": "onKeyUp",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onKeyUpCapture",
        "type": "KeyboardEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbort",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAbortCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThrough",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onCanPlayThroughCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDurationChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptied",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEmptiedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncrypted",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEncryptedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEnded",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onEndedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedData",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedDataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadata",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadedMetadataCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStart",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLoadStartCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPause",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPauseCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlay",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlaying",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPlayingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgress",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onProgressCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onRateChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeked",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekedCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeeking",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSeekingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalled",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onStalledCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspend",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSuspendCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdate",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTimeUpdateCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChange",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onVolumeChangeCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaiting",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWaitingCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAuxClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenu",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onContextMenuCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClick",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDoubleClickCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrag",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnd",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEndCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnter",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragEnterCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExit",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragExitCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeave",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragLeaveCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOver",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragOverCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStart",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDragStartCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDrop",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onDropCapture",
        "type": "DragEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDown",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseDownCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseEnter",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseLeave",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMove",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseMoveCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOut",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOutCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOver",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseOverCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUp",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onMouseUpCapture",
        "type": "MouseEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelect",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onSelectCapture",
        "type": "ReactEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancel",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchCancelCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEnd",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchEndCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMove",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchMoveCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStart",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTouchStartCapture",
        "type": "TouchEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDown",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerDownCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMove",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerMoveCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUp",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerUpCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancel",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerCancelCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerEnter",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerLeave",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOver",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOverCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOut",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onPointerOutCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onGotPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onLostPointerCaptureCapture",
        "type": "PointerEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScroll",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheel",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onWheelCapture",
        "type": "WheelEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStart",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationStartCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEnd",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationEndCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIteration",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onAnimationIterationCapture",
        "type": "AnimationEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEnd",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionEndCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressHydrationWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "className",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "color",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "lang",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "style",
        "type": "CSSProperties",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "type",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "role",
        "type": "AriaRole",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "tabIndex",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-activedescendant",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
      },
      {
        "name": "aria-atomic",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
      },
      {
        "name": "aria-autocomplete",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
      },
      {
        "name": "aria-braillelabel",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label."
      },
      {
        "name": "aria-brailleroledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription."
      },
      {
        "name": "aria-busy",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "aria-checked",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected."
      },
      {
        "name": "aria-colcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex."
      },
      {
        "name": "aria-colindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan."
      },
      {
        "name": "aria-colindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext."
      },
      {
        "name": "aria-colspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan."
      },
      {
        "name": "aria-controls",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns."
      },
      {
        "name": "aria-current",
        "type": "boolean | \"true\" | \"false\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\"",
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements."
      },
      {
        "name": "aria-describedby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby"
      },
      {
        "name": "aria-description",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby."
      },
      {
        "name": "aria-details",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby."
      },
      {
        "name": "aria-disabled",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly."
      },
      {
        "name": "aria-dropeffect",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-errormessage",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby."
      },
      {
        "name": "aria-expanded",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
      },
      {
        "name": "aria-flowto",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
      },
      {
        "name": "aria-grabbed",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1"
      },
      {
        "name": "aria-haspopup",
        "type": "boolean | \"true\" | \"false\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\"",
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
      },
      {
        "name": "aria-hidden",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled."
      },
      {
        "name": "aria-invalid",
        "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage."
      },
      {
        "name": "aria-keyshortcuts",
        "type": "string",
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
      },
      {
        "name": "aria-label",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby."
      },
      {
        "name": "aria-labelledby",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby."
      },
      {
        "name": "aria-level",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure."
      },
      {
        "name": "aria-live",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
      },
      {
        "name": "aria-modal",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed."
      },
      {
        "name": "aria-multiline",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line."
      },
      {
        "name": "aria-multiselectable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants."
      },
      {
        "name": "aria-orientation",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
      },
      {
        "name": "aria-owns",
        "type": "string",
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls."
      },
      {
        "name": "aria-placeholder",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
      },
      {
        "name": "aria-posinset",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize."
      },
      {
        "name": "aria-pressed",
        "type": "boolean | \"true\" | \"false\" | \"mixed\"",
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected."
      },
      {
        "name": "aria-readonly",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled."
      },
      {
        "name": "aria-relevant",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic."
      },
      {
        "name": "aria-required",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted."
      },
      {
        "name": "aria-roledescription",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element."
      },
      {
        "name": "aria-rowcount",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex."
      },
      {
        "name": "aria-rowindex",
        "type": "number",
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan."
      },
      {
        "name": "aria-rowindextext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext."
      },
      {
        "name": "aria-rowspan",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan."
      },
      {
        "name": "aria-selected",
        "type": "Booleanish",
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed."
      },
      {
        "name": "aria-setsize",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset."
      },
      {
        "name": "aria-sort",
        "type": "enum",
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order."
      },
      {
        "name": "aria-valuemax",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget."
      },
      {
        "name": "aria-valuemin",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget."
      },
      {
        "name": "aria-valuenow",
        "type": "number",
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext."
      },
      {
        "name": "aria-valuetext",
        "type": "string",
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget."
      },
      {
        "name": "onScrollEnd",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onScrollEndCapture",
        "type": "UIEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onBeforeToggle",
        "type": "ToggleEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancel",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionCancelCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRun",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionRunCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStart",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "onTransitionStartCapture",
        "type": "TransitionEventHandler<HTMLButtonElement>",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "key",
        "type": "Key",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "form",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "value",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "disabled",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formAction",
        "type": "string | ((formData: FormData) => void | Promise<void>)",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formEncType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formMethod",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formNoValidate",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "formTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultChecked",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "defaultValue",
        "type": "string | number | readonly string[]",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "suppressContentEditableWarning",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "accessKey",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCapitalize",
        "type": "\"none\" | \"off\" | (string & {}) | \"on\" | \"sentences\" | \"words\" | \"characters\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoFocus",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contentEditable",
        "type": "Booleanish | \"inherit\" | \"plaintext-only\"",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "contextMenu",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "dir",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "draggable",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "enterKeyHint",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "hidden",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "nonce",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "slot",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "spellCheck",
        "type": "Booleanish",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "translate",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "radioGroup",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "about",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "datatype",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inlist",
        "type": "any",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "prefix",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "property",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rel",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "resource",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "rev",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "typeof",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "vocab",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoCorrect",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "autoSave",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemProp",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemScope",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemType",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemID",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "itemRef",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "results",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "security",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "unselectable",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popover",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTargetAction",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "popoverTarget",
        "type": "string",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "inert",
        "type": "boolean",
        "defaultValue": null,
        "description": "@see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert"
      },
      {
        "name": "inputMode",
        "type": "enum",
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}"
      },
      {
        "name": "is",
        "type": "string",
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}"
      },
      {
        "name": "exportparts",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts}"
      },
      {
        "name": "part",
        "type": "string",
        "defaultValue": null,
        "description": "@see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part}"
      },
      {
        "name": "asChild",
        "type": "boolean",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "ref",
        "type": "Ref<HTMLButtonElement>",
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}"
      }
    ]
  },
  {
    "id": "toast",
    "name": "toast",
    "description": "",
    "type": "tool",
    "properties": [
      {
        "name": "title",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "content",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "action",
        "type": "ReactNode",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "variant",
        "type": "enum",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "toastLimit",
        "type": "number",
        "defaultValue": null,
        "description": ""
      },
      {
        "name": "duration",
        "type": "number",
        "defaultValue": null,
        "description": ""
      }
    ]
  }
]